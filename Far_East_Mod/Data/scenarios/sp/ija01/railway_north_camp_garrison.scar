import("ScarUtil.scar");
import("CampaignUtil.scar");

sp_achievement_ignore = true; -- So we dont load non-essential stuff (some achievements are still tracked)

function OnGameSetup()
	
	player1 = Setup_Player(1, 11005508, TRACE_JAPAN, 1); -- Unsure about the name
	player2 = Setup_Player(2, 11005508, TRACE_JAPAN, 1);
	player3 = Setup_Player(3, 11005509, TRACE_CHINA, 2); -- Possibly find a better name
	
end

function OnGameRestore()
	
	player1 = World_GetPlayerAt(1);
	player2 = World_GetPlayerAt(2);
	player3 = World_GetPlayerAt(3);
	
	Game_DefaultGameRestore();
	
end

function OnInit()

	--[[ Set up the objectives for the mission ]]
	Hook_Objectives();

	--[[ Set up the player - this will possibly be redundant when the save game error is fixed! ]]
	SetupPlayer();

	g_kwantung = CONSTANTS.JAPAN.SBP.KWANTUNG_SP; -- shortcut definition;

	--if dev_FEW then (renable this check once savegame bug is fixed)
		dev_lazy_startup();
	--else
	--	Counterattack_Cleanup();
	--end

	sg_playersquads = Player_GetSquads(player1);
	SGroup_WarpToMarker( sg_playersquads, mkr_warp_north_camp_intro );

	g_playercount = SGroup_Count(sg_playersquads);

	EGroup_InstantCaptureStrategicPoint( eg_mission2_captured, player1 );

	Camera_SetInputEnabled( false );
	Camera_MoveToPosition(mkr_cam_start2);
	Game_LoadAtmosphere( "data:art/scenarios/presets/atmosphere/FE1_RAILWAY_NORTH_CAMP_DAY.aps", 0.1 );

	mission_spawn_china_garrison();
	mission_spawn_china_supplydepot();
	
	mission_spawn_japanese_defence();
	
	Mission_EnableBounties(player3);
	
	Util_StartIntel(EVENTS.intro);

	Rule_Add(mission_kickoff);

end

function Counterattack_Cleanup()
	-- Use this for cleaning up stuff from the mission before
end

function Hook_Objectives()

	OBJ_CLEAR_GARRISON = {
		
		SetupUI = function()
		end,
		
		OnStart = function()
		end,
		
		OnComplete = function()
		end,
		
		IsComplete = function()
			return false
		end,
		
		OnFail = function()
		end,
		
		Title = 11005547,
		Description = 11005511,
		Type = OT_Primary,
		
	}
	
	OBJ_TAKEOUT_SUPPLY = {
		
		SetupUI = function()
			OBJ_TAKEOUT_SUPPLY.target_ui = Objective_AddUIElements( OBJ_TAKEOUT_SUPPLY, eg_supply_depot, true, 11005552, false); 
		end,
		
		OnStart = function()
		end,
		
		OnComplete = function()
		end,
		
		IsComplete = function()
			return false
		end,
		
		OnFail = function()
		end,
		
		Title = 11005548,
		Description = 11005511,
		Type = OT_Secondary,
		
	}

	OBJ_TAKEOUT_FUEL_ENTRANCE = {
		
		SetupUI = function()
			OBJ_TAKEOUT_FUEL_ENTRANCE.target_ui = Objective_AddUIElements( OBJ_TAKEOUT_FUEL_ENTRANCE, eg_supply_depot, true, 11005552, false); 
		end,
		
		OnStart = function()
		end,
		
		OnComplete = function()
		end,
		
		IsComplete = function()
			return false
		end,
		
		OnFail = function()
		end,
		
		Title = 11005548,
		Description = 11005511,
		Type = OT_Secondary,
		
	}
	
	OBJ_MEDAL = {
		
		SetupUI = function()
		end,
		
		OnStart = function()
		end,
		
		OnComplete = function()
			fe_setachivement("fe_mukden02"); -- Unlock the achievement
		end,
		
		IsComplete = function()
			return false
		end,
		
		OnFail = function()
		end,
		
		Title = 11005549,
		Description = 11005512,
		Type = OT_Medal,
		MedalID = CONSTANTS.CAMPAIGN.PRELUDE.M02,
		
	}

	Objective_Register(OBJ_CLEAR_GARRISON);
	Objective_Register(OBJ_TAKEOUT_SUPPLY);
	Objective_Register(OBJ_TAKEOUT_FUEL_ENTRANCE);
	Objective_Register(OBJ_MEDAL);

end

function SetupPlayer()

	Cmd_InstantUpgrade( player1, UPG.JAPAN.TECH.PHASE3 ); -- So the Kwantung Infantry can throw satchel charges which they'll need if they wish to destroy the enemy vehicles
	
	Player_SetResource( player1, RT_Manpower, Util_DifVar({ 800, 600, 400, 280 }) );
	Player_SetResource( player1, RT_Munition, Util_DifVar({ 400, 340, 280, 240 }) );
	Player_SetResource( player1, RT_Fuel, 0 );
	
	g_manpowerMod = Modify_PlayerResourceRate( player1, RT_Manpower, 0.05 );
	g_munitionMod = Modify_PlayerResourceRate( player1, RT_Munition, 1.6 );
	g_fuelMod = Modify_PlayerResourceRate( player1, RT_Fuel, 0 ); -- We don't need fuel in this mission	
	
	Modify_PlayerProductionRate( player1, 5 ); -- For when reinforcing
	
	Player_SetPopCapOverride( player1, 25 ); 
	Player_SetConstructionMenuAvailability( player1, "type_construction/tp_construction_axis_infantry_basic", ITEM_REMOVED ); -- No need for constructing anything in this mission

end

Scar_AddInit(OnInit);

function dev_lazy_startup()

	print("Calling dev_lazy_startup!");

	local lazy_dev = SGroup_CreateIfNotFound("lazy_dev");
	
	Util_CreateSquads( player1, lazy_dev, g_kwantung, mkr_jap_spawn01);
	Util_CreateSquads( player1, lazy_dev, g_kwantung, mkr_jap_spawn02);
	Util_CreateSquads( player1, lazy_dev, g_kwantung, mkr_jap_spawn03);
	Util_CreateSquads( player1, lazy_dev, g_kwantung, mkr_jap_spawn04);
	
	-- Note: This is currently being done due to problems with savegames.
	
	

end

function mission_spawn_china_garrison()

	sg_china_snipers = SGroup_CreateIfNotFound("sg_china_snipers");
	
	Util_SpawnInStructures(eg_base_snipers, player3, sg_china_snipers, SBP.CHINA.INFANTRY.SNIPER, 1, 1);

	sg_china_swamp = SGroup_CreateIfNotFound("sg_china_swamp");
	sg_china_base_defence = SGroup_CreateIfNotFound("sg_china_base_defence");
	
	t_swamp = {
		mkr_china_swamp01, mkr_china_swamp02, mkr_china_swamp03, mkr_china_swamp04, mkr_china_swamp05,
		mkr_china_swamp06, mkr_china_swamp07, mkr_china_swamp08, mkr_china_swamp09,
	};
	
	t_base = {
		mkr_china_base02, mkr_china_base03, mkr_china_base04, mkr_china_base05, mkr_china_base06, mkr_china_base07,
		mkr_china_base08, mkr_china_base09, mkr_china_base10, mkr_china_base11, mkr_china_base12, mkr_china_base13, 
		mkr_china_base14, mkr_china_base15, mkr_china_base16, mkr_china_base18, mkr_china_base19, mkr_china_base20, 
		mkr_china_base22, mkr_china_base23,
	};
	
	t_hmg = {
		mkr_china_base01, mkr_china_base17, mkr_china_base21
	};
	
	for i = 1, #t_swamp do
		Util_CreateSquads( player3, sg_china_swamp, SBP.CHINA.INFANTRY.REGULARS, t_swamp[i]);
	end
	
	for i = 1, #t_base do
		Util_CreateSquads( player3, sg_china_base_defence, SBP.CHINA.INFANTRY.REGULARS, t_base[i]);
	end
	
	for i = 1, #t_hmg do
		Util_CreateSquads( player3, sg_china_base_defence, SBP.CHINA.TEAM_WEAPONS.HMG_TEAM, t_hmg[i]);
	end
	
	sg_china_field_guns = SGroup_CreateIfNotFound("sg_china_field_guns");
	
	Util_CreateSquads( player3, sg_china_field_guns, SBP.CHINA.FIELD_GUNS.GER_FK96_NA, mkr_base_arty01);
	Util_CreateSquads( player3, sg_china_field_guns, SBP.CHINA.FIELD_GUNS.GER_FK96_NA, mkr_base_arty02);

	sg_china_barracks = SGroup_CreateIfNotFound("sg_china_barracks");
	
	Util_CreateSquads( player3, sg_china_barracks, SBP.CHINA.INFANTRY.REGULARS, eg_barracks01, nil, 1, World_GetRand(2, 5));
	Util_CreateSquads( player3, sg_china_barracks, SBP.CHINA.INFANTRY.REGULARS, eg_barracks02, nil, 1, World_GetRand(2, 5));
	Util_CreateSquads( player3, sg_china_barracks, SBP.CHINA.INFANTRY.REGULARS, eg_barracks03, nil, 1, World_GetRand(2, 5));
	Util_CreateSquads( player3, sg_china_barracks, SBP.CHINA.INFANTRY.REGULARS, eg_barracks04, nil, 1, World_GetRand(2, 5));

end

function mission_spawn_china_supplydepot()

	sg_china_supply_sniper = SGroup_CreateIfNotFound("sg_china_supply_sniper");
	sg_china_supply_barracks = SGroup_CreateIfNotFound("sg_china_supply_barracks");
	sg_china_supply_central = SGroup_CreateIfNotFound("sg_china_supply_central");
	sg_china_supply_back = SGroup_CreateIfNotFound("sg_china_supply_back");
	
	Util_CreateSquads( player3, sg_china_supply_sniper, SBP.CHINA.INFANTRY.SNIPER, eg_supply_watchtower, nil, 1);
	
	Util_CreateSquads( player3, sg_china_supply_barracks, SBP.CHINA.INFANTRY.REGULARS, eg_supply_barracks01, nil, 1);
	Util_CreateSquads( player3, sg_china_supply_barracks, SBP.CHINA.INFANTRY.REGULARS, eg_supply_barracks02, nil, 1);
	
	Util_CreateSquads( player3, sg_china_supply_central, SBP.CHINA.INFANTRY.REGULARS, mkr_china_supply_watch03, nil, 1, World_GetRand(1, 3));
	Util_CreateSquads( player3, sg_china_supply_central, SBP.CHINA.INFANTRY.REGULARS, mkr_china_supply_watch04, nil, 1, World_GetRand(1, 3));
	Util_CreateSquads( player3, sg_china_supply_central, SBP.CHINA.INFANTRY.REGULARS, mkr_china_supply_watch05, nil, 1, World_GetRand(1, 3));
	Util_CreateSquads( player3, sg_china_supply_central, SBP.CHINA.INFANTRY.REGULARS, mkr_china_supply_watch06, nil, 1, World_GetRand(1, 3));
	
	Util_CreateSquads( player3, sg_china_supply_back, SBP.CHINA.INFANTRY.REGULARS, mkr_china_supply_watch01, nil, 1, World_GetRand(1, 2));
	Util_CreateSquads( player3, sg_china_supply_back, SBP.CHINA.INFANTRY.REGULARS, mkr_china_supply_watch02, nil, 1, World_GetRand(1, 2));
	
	COHEvent_OnSGroupEmpty(mission_onsupplyback_dead, {}, sg_china_supply_back, 1.75);

end

function mission_spawn_japanese_defence()

	sg_jap_movdef = SGroup_CreateIfNotFound("sg_jap_movdef");
	
	Util_CreateSquads( player2, sg_jap_movdef, SBP.JAPAN.INFANTRY.KWANTUNG_ARMY, mkr_ally_spawner, mkr_china_regulars29, 1, World_GetRand(2, 3));
	Util_CreateSquads( player2, sg_jap_movdef, SBP.JAPAN.INFANTRY.KWANTUNG_ARMY, mkr_ally_spawner, mkr_china_regulars30, 1, World_GetRand(2, 3));
	Util_CreateSquads( player2, sg_jap_movdef, SBP.JAPAN.INFANTRY.KWANTUNG_ARMY, mkr_ally_spawner, mkr_china_regulars31, 1, World_GetRand(2, 3));
	Util_CreateSquads( player2, sg_jap_movdef, SBP.JAPAN.INFANTRY.KWANTUNG_ARMY, mkr_ally_spawner, mkr_china_regulars32, 1, World_GetRand(2, 3));
	Util_CreateSquads( player2, sg_jap_movdef, SBP.JAPAN.INFANTRY.KWANTUNG_ARMY, mkr_ally_spawner, mkr_china_regulars33, 1, World_GetRand(2, 3));
	
	t_japartillery_targets = { mkr_japarty_target01, mkr_japarty_target02, mkr_japarty_target03, mkr_japarty_target04 };

	sg_jap_artillery = SGroup_CreateIfNotFound("sg_jap_artillery");
	
	Util_CreateSquads( player2, sg_jap_artillery, SBP.JAPAN.FIELD_GUNS.TYPE94_MOUNTAIN_GUN, mkr_jap_support_artillery, mkr_ja1, 1);
	Util_CreateSquads( player2, sg_jap_artillery, SBP.JAPAN.FIELD_GUNS.TYPE94_MOUNTAIN_GUN, mkr_jap_support_artillery, mkr_ja2, 1);

	SGroup_SetInvulnerable( sg_jap_artillery, true ); 

	Rule_AddInterval(mission_active_japanese_artillery, 45);

end

function mission_active_japanese_artillery()

	if not SGroup_IsMoving( sg_jap_artillery, ALL ) then
		
		if 	SGroup_IsDoingAttack( sg_jap_artillery, ANY, 10 )  then
			Cmd_Stop(sg_jap_artillery);
		else
			_targetEach = function(a,b,sid)
				Cmd_Attack( SGroup_FromSquad(sid), Util_SimulateArtillery(t_japartillery_targets, 7));
			end
			SGroup_ForEach(sg_jap_artillery, _targetEach);
		end
		
	end

end

function mission_kickoff()

	if not Event_IsAnyRunning() then
		
		Camera_SetInputEnabled( true );
		
		UI_BindingSetEnabled("company_commander", false);
		
		Objective_Start(OBJ_CLEAR_GARRISON, true);
		Objective_Start(OBJ_MEDAL, true);
		Objective_Start(OBJ_TAKEOUT_SUPPLY, true);
		
		Rule_AddInterval(mission_check_units, 1);
		Rule_AddInterval(mission_check_garrison, 5);
		Rule_AddInterval(mission_has_secured_supply, 7);
		
		mission_no_direct_assault();
		
		Rule_AddOneShot(mission_delayed_fuel_kickoff, 2 * 60);

		Rule_RemoveMe();
		
	end

end

function mission_delayed_fuel_kickoff()

	-- Do some introductionary speech?

	Objective_Start(OBJ_TAKEOUT_FUEL_ENTRANCE, true);

end

function mission_check_units()

	local sg_all = Player_GetSquads(player1);
	local size = SGroup_Count(sg_all);
	
	if (size == 0) then
		Objective_Fail(OBJ_CLEAR_GARRISON, true);
		Game_EndDelay( false, 7 );
	else
		if size < g_playercount and not Objective_IsFailed(OBJ_MEDAL) then
			Objective_Fail(OBJ_MEDAL, true);
		end
	end

end

function mission_check_garrison()

	if not Prox_ArePlayersNearMarker( player3, mkr_garrison_check, ANY ) then
		
		if not Objective_IsFailed(OBJ_MEDAL) then
			Objective_Complete(OBJ_MEDAL, true);
		end
		
		if not Objective_IsComplete(OBJ_TAKEOUT_SUPPLY) then
			Objective_Fail(OBJ_TAKEOUT_SUPPLY, false);
		end
		
		Objective_Complete(OBJ_CLEAR_GARRISON, true);
		
		Game_EndHistorical(11005550, 11005551, 13); -- End the game 13 seconds later, with a historical context
		
		Rule_RemoveMe();
		
	end

end

function mission_no_direct_assault()

	g_directAssaultBlock = {
		modifiervalue = 1.65,
		markers = { mkr_vuln1, mkr_vuln2, mkr_vuln3, mkr_vuln4 },
		affected = {},
	};

	Rule_AddInterval(mission_no_direct_assault_update, 1);

end

function mission_no_direct_assault_update()

	for k,v in pairs(g_directAssaultBlock.affected) do
		v.valid = false;
	end

	for i = 1, #g_directAssaultBlock.markers do
		local _sg = SGroup_CreateIfNotFound("__dimv"..i);
		if World_GetSquadsNearMarker( player1, _sg, g_directAssaultBlock.markers[i], OT_Player ) > 0 then
			local f_squads = function(sgroupid, itemindex, squadID)
				if g_directAssaultBlock.affected[squadID] == nil then
					print("Squad " ..Squad_GetGameID(squadID) .." has entered the vulnerable zone and will be punished");
					g_directAssaultBlock.affected[squadID] = {
						mod = Modify_Vulnerability( SGroup_FromSquad(squadID), g_directAssaultBlock.modifiervalue );
					}
				end
				g_directAssaultBlock.affected[squadID].valid = true;
			end
			SGroup_ForEach( _sg, f_squads );
		end
	end

	for k,v in pairs(g_directAssaultBlock.affected) do
		if not v.valid then
			Modifier_Remove(g_directAssaultBlock.affected[k].mod);
			g_directAssaultBlock.affected[k] = nil;
		end
	end

end

function mission_has_secured_supply()

	if (EGroup_IsCapturedByPlayer( eg_supply_depot, player1, ANY )) then
		
		Objective_Complete(OBJ_TAKEOUT_SUPPLY, true);		
		Rule_RemoveMe();
		
	end

end

function mission_onsupplyback_dead(...)

	

	-- Spawn in some reinforcements

end
